[from-internal]
exten => _X.,1,Dial(PJSIP/${EXTEN},30)
 same => n,VoiceMail(101@voicemailcontext,u)
 same => n,NoOp(${VMSTATUS})
 same => n,System(echo '${EXTEN} hang up')
 same => n,Hangup()

exten => ${ALLOWED_EXTEN},1,Dial(Dongle/dongle0/holdother:+${FILTER(0-9,${EXTEN})})

[sendMessage]
exten => start,1,System(echo '${MESSAGE}' >> /var/log/asterisk/${ARG1}.txt)
 same => n,Set(MESSAGE_URL=${URIENCODE(${MESSAGE})})
 same => n,Set(CURL_RESULT=${CURL(https://api.telegram.org/${BOT_ID}/sendMessage?chat_id=${CHAT_ID}&text=${MESSAGE_URL})})
 same => n,NoOp(${CURL_RESULT})           ; now use the NoOp() application to print the result to  the Asterisk console
 same => n,System(echo -e "From: ${EMAIL_FROM}\nTo: ${EMAIL_TO}\nSubject: ${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)} — ${DONGLENAME} — ${CALLERID(num)}\n\n${MESSAGE}" | /usr/bin/msmtp ${EMAIL_TO})
 same => n,NoOp(${CURL_RESULT})           ; now use the NoOp() application to print the result to  the Asterisk console
 same => n,Hangup()

[dongle-incoming-sms]
exten => sms,1,Noop(Incoming SMS from ${CALLERID(num)} ${BASE64_DECODE(${SMS_BASE64})})
 same => n,Set(MESSAGE='${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)} — ${DONGLENAME} — ${CALLERID(num)}: ${BASE64_DECODE(${SMS_BASE64})}')
 same => n,Gosub(sendMessage,start,1(${CALLERID(num)}))

[dongle-incoming-ussd]
exten => ussd,1,Noop(Incoming USSD: ${BASE64_DECODE(${USSD_BASE64})})
 same => n,Set(MESSAGE='${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)} — ${DONGLENAME}: ${BASE64_DECODE(${USSD_BASE64})}')
 same => n,Gosub(sendMessage,start,1(${CALLERID(num)}))

[dongle-incoming]
include => dongle-incoming-sms
include => dongle-incoming-ussd

exten => ${ALLOWED_EXTEN},1,NoOp(${CALLER_ID})
 same => n,Dial(PJSIP/100&PJSIP/101,30)
 same => n,NoOp(${VMSTATUS})
 same => n,System(echo '${EXTEN} hang up')