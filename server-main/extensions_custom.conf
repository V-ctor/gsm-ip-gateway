[from-internal]
exten => _10X,1,GoSub(from-internal-sub,s,1(${EXTEN}))
exten => ${ALLOWED_EXTEN},1,GoSub(from-internal-sub,s,1(${EXTEN}))

[from-internal-sub]
exten => s,1,NoOp(Call to ${ARG1})
 same => n,Set(CALLFILENAME=${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}-${CALLERID(num)})
 same => n,Set(DATETIME=${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)})
 same => n,Set(RECORD_FILE=/var/spool/asterisk/monitor/records/${CALLFILENAME})
 same => n,MixMonitor(${RECORD_FILE}.wav,bP,/usr/local/bin/send_last_voicemail.sh ${RECORD_FILE} monitor ${DATETIME} ${CALLERID(num)})
 same => n,Playback(pls-hold-while-try)
 same => n,Dial(PJSIP/${ARG1}@cloud,30,r)
 same => n,System(echo Dial status '${DIALSTATUS}')
 same => n,Playback(im-sorry)
 same => n,Playback(number-not-answering)
 same => n,Playback(pls-try-call-later)
 same => n,System(echo '${ARG1} hang up')

; After the Hangup, continue executing
exten => h,1,System(echo 'Dial status ${DIALSTATUS}')
  same => n,Goto(voicemail-processing,common,1)

exten => 6500,1,Answer(500)
 same => n,VoiceMailMain(common@voice-mail)

exten => 555,1,Answer
exten => 555,2,Playback(welcome)
exten => 555,3,Playback(demo-echotest)
exten => 555,4,Echo
exten => 555,5,Playback(demo-echodone)
exten => 555,6,Playback(vm-goodbye)
exten => 555,7,Hangup

exten => i,1,Answer
 same => n,Playback(pbx-invalid)
 same => n,Playback(vm-goodbye)
 same => n,Hangup()

[from-remote]
exten => from_remote,1,Set(CALLFILENAME=${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}-${CALLERID(num)})
 same => n,Set(DATETIME=${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)})
 same => n,Set(RECORD_FILE=/var/spool/asterisk/monitor/records/${CALLFILENAME})
 same => n,MixMonitor(${RECORD_FILE}.wav,bP,/usr/local/bin/send_last_voicemail.sh ${RECORD_FILE} monitor ${DATETIME} ${CALLERID(num)})
 same => n,Dial(PJSIP/${EXTEN},${GSM_ANSWER_TIMEOUT},m)
 same => n,System(echo '${EXTEN} no answer')
 same => n,VoiceMail(common@voice-mail,u)
 same => n,NoOp(${VMSTATUS})
 same => n,System(/usr/local/bin/send_last_voicemail.sh)
 same => n,System(echo '${EXTEN} hang up')
 same => n,Hangup()

; After the Hangup, continue executing
exten => h,1,System(echo 'Dial status ${DIALSTATUS}')
  same => n,Goto(voicemail-processing,common,1)

[voicemail-processing]
exten => common,1,System(/usr/local/bin/send_last_voicemail.sh ${VM_MESSAGEFILE} email {DIALSTATUS})

exten => 555,1,Answer
exten => 555,2,Playback(welcome)
exten => 555,3,Playback(demo-echotest)
exten => 555,4,Echo
exten => 555,5,Playback(demo-echodone)
exten => 555,6,Playback(vm-goodbye)
exten => 555,7,Hangup

[sms-out]
exten => _20X,1,NoOp(Outbound Message dialplan invoked)
 same => n,NoOp(To ${MESSAGE(to)})
 same => n,NoOp(From ${MESSAGE(from)})
 same => n,NoOp(Body ${MESSAGE(body)})
 same => n,Set(NUMBER_FROM=${CUT(CUT(MESSAGE(from),@,1),:,2)})
 same => n,Set(NUMBER_TO=${CUT(CUT(MESSAGE(to),@,1),:,2)})
 same => n,Set(ACTUAL_FROM="201" <sip:201@192.168.30.13>)
 same => n,Set(ACTUAL_TO=pjsip:cloud)
 same => n,MessageSend(${ACTUAL_TO},${ACTUAL_FROM})
 same => n,NoOp(Send status is ${MESSAGE_SEND_STATUS})
 same => n,Hangup()

[sms-in]
exten => cloud,1,NoOp(Outbound Message dialplan invoked)
 same => n,NoOp(To ${MESSAGE(to)})
 same => n,NoOp(From ${MESSAGE(from)})
 same => n,NoOp(Body ${MESSAGE(body)})
 same => n,Set(MESSAGE=${MESSAGE(body)})
 same => n,Set(MESSAGE_URL=${URIENCODE(${MESSAGE})})
 same => n,Set(CURL_RESULT=${CURL(https://api.telegram.org/${BOT_ID}/sendMessage?chat_id=${CHAT_ID}&text=${MESSAGE_URL})})
 same => n,NoOp(${CURL_RESULT})           ; now use the NoOp() application to print the result to  the Asterisk console
 same => n,System(echo "${MESSAGE}" |  mutt -s "${MESSAGE(from)} ${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)}" "${EMAIL_TO}")
 same => n,Hangup()

[sms-out-simulate]
exten => _X:*.,1,NoOp(Outbound Message dialplan invoked)
 same => n,Set(ACTUAL_FROM=sip:cloud@192.168.30.2)
 same => n,Set(ACTUAL_TO=pjsip:cloud)
 same => n,Set(MESSAGE(body)=${EXTEN})
 same => n,MessageSend(${ACTUAL_TO},${ACTUAL_FROM})
 same => n,NoOp(Send status is ${MESSAGE_SEND_STATUS})
 same => n,GotoIf($[${MESSAGE_SEND_STATUS} != SUCCESS]?MESSAGE_FAILED)
 same => n,Hangup()
 same => n(MESSAGE_FAILED),Set(CURL_RESULT=${CURL(https://api.telegram.org/${BOT_ID}/sendMessage?chat_id=${CHAT_ID}&text=${MESSAGE_SEND_STATUS})})
 same => n,Hangup()